plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'

}
group 'org.example'
version '1.0-SNAPSHOT'

allure {
    report {
        version.set("2.21.0")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.21.0")
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation "org.aspectj:aspectjweaver:1.9.22.1"
    testImplementation "com.codeborne:selenide:7.2.2"
    testImplementation "org.junit.jupiter:junit-jupiter:5.10.2"
    testImplementation "com.github.javafaker:javafaker:1.0.2"
    testImplementation "com.codeborne:pdf-test:1.5.0"
    testImplementation "org.testng:testng:7.7.1"
    testImplementation "com.codeborne:xls-test:1.4.3"
    testImplementation 'com.opencsv:opencsv:5.7.1'
    testImplementation "com.google.code.gson:gson:2.10.1"
    testImplementation "io.qameta.allure:allure-selenide:2.21.0"
    testImplementation  "org.aeonbits.owner:owner:1.0.4"
    testImplementation  'io.github.bonigarcia:webdrivermanager:5.2.1'
    testImplementation  'org.assertj:assertj-core:3.23.1'
    implementation 'org.slf4j:slf4j-simple:2.0.7'
    testImplementation "io.rest-assured:rest-assured:5.3.0"
    testImplementation "io.rest-assured:json-schema-validator:5.3.0"
}
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

// Запускаем все тесты
test {
    useJUnitPlatform()
}
// Запускаем все тесты по тэгу "Smoke"
task smoke_tests(type: Test) {
    useJUnitPlatform {
        includeTags("Smoke")
    }
// Очищаем результаты Allure отчетов
}
task cleanAllureReports(type: Delete) {
    delete 'build/allure-results', 'build/allure-report'
}




